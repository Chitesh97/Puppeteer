{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { debugError, DEFAULT_VIEWPORT } from '../common/util.js';\nimport { CdpBrowser } from './Browser.js';\nimport { Connection } from './Connection.js';\n/**\n * Users should never call this directly; it's called when calling\n * `puppeteer.connect` with `protocol: 'cdp'`.\n *\n * @internal\n */\nexport async function _connectToCdpBrowser(connectionTransport, url, options) {\n  const {\n    acceptInsecureCerts = false,\n    networkEnabled = true,\n    defaultViewport = DEFAULT_VIEWPORT,\n    downloadBehavior,\n    targetFilter,\n    _isPageTarget: isPageTarget,\n    slowMo = 0,\n    protocolTimeout\n  } = options;\n  const connection = new Connection(url, connectionTransport, slowMo, protocolTimeout);\n  const {\n    browserContextIds\n  } = await connection.send('Target.getBrowserContexts');\n  const browser = await CdpBrowser._create(connection, browserContextIds, acceptInsecureCerts, defaultViewport, downloadBehavior, undefined, () => {\n    return connection.send('Browser.close').catch(debugError);\n  }, targetFilter, isPageTarget, undefined, networkEnabled);\n  return browser;\n}","map":{"version":3,"names":["debugError","DEFAULT_VIEWPORT","CdpBrowser","Connection","_connectToCdpBrowser","connectionTransport","url","options","acceptInsecureCerts","networkEnabled","defaultViewport","downloadBehavior","targetFilter","_isPageTarget","isPageTarget","slowMo","protocolTimeout","connection","browserContextIds","send","browser","_create","undefined","catch"],"sources":["/Users/goyac1/Desktop/Projects/puppeteer/node_modules/puppeteer-core/src/cdp/BrowserConnector.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {ConnectionTransport} from '../common/ConnectionTransport.js';\nimport type {ConnectOptions} from '../common/ConnectOptions.js';\nimport {debugError, DEFAULT_VIEWPORT} from '../common/util.js';\n\nimport {CdpBrowser} from './Browser.js';\nimport {Connection} from './Connection.js';\n\n/**\n * Users should never call this directly; it's called when calling\n * `puppeteer.connect` with `protocol: 'cdp'`.\n *\n * @internal\n */\nexport async function _connectToCdpBrowser(\n  connectionTransport: ConnectionTransport,\n  url: string,\n  options: ConnectOptions,\n): Promise<CdpBrowser> {\n  const {\n    acceptInsecureCerts = false,\n    networkEnabled = true,\n    defaultViewport = DEFAULT_VIEWPORT,\n    downloadBehavior,\n    targetFilter,\n    _isPageTarget: isPageTarget,\n    slowMo = 0,\n    protocolTimeout,\n  } = options;\n\n  const connection = new Connection(\n    url,\n    connectionTransport,\n    slowMo,\n    protocolTimeout,\n  );\n\n  const {browserContextIds} = await connection.send(\n    'Target.getBrowserContexts',\n  );\n  const browser = await CdpBrowser._create(\n    connection,\n    browserContextIds,\n    acceptInsecureCerts,\n    defaultViewport,\n    downloadBehavior,\n    undefined,\n    () => {\n      return connection.send('Browser.close').catch(debugError);\n    },\n    targetFilter,\n    isPageTarget,\n    undefined,\n    networkEnabled,\n  );\n  return browser;\n}\n"],"mappings":"AAAA;;;;;AAQA,SAAQA,UAAU,EAAEC,gBAAgB,QAAO,mBAAmB;AAE9D,SAAQC,UAAU,QAAO,cAAc;AACvC,SAAQC,UAAU,QAAO,iBAAiB;AAE1C;;;;;;AAMA,OAAO,eAAeC,oBAAoBA,CACxCC,mBAAwC,EACxCC,GAAW,EACXC,OAAuB;EAEvB,MAAM;IACJC,mBAAmB,GAAG,KAAK;IAC3BC,cAAc,GAAG,IAAI;IACrBC,eAAe,GAAGT,gBAAgB;IAClCU,gBAAgB;IAChBC,YAAY;IACZC,aAAa,EAAEC,YAAY;IAC3BC,MAAM,GAAG,CAAC;IACVC;EAAe,CAChB,GAAGT,OAAO;EAEX,MAAMU,UAAU,GAAG,IAAId,UAAU,CAC/BG,GAAG,EACHD,mBAAmB,EACnBU,MAAM,EACNC,eAAe,CAChB;EAED,MAAM;IAACE;EAAiB,CAAC,GAAG,MAAMD,UAAU,CAACE,IAAI,CAC/C,2BAA2B,CAC5B;EACD,MAAMC,OAAO,GAAG,MAAMlB,UAAU,CAACmB,OAAO,CACtCJ,UAAU,EACVC,iBAAiB,EACjBV,mBAAmB,EACnBE,eAAe,EACfC,gBAAgB,EAChBW,SAAS,EACT,MAAK;IACH,OAAOL,UAAU,CAACE,IAAI,CAAC,eAAe,CAAC,CAACI,KAAK,CAACvB,UAAU,CAAC;EAC3D,CAAC,EACDY,YAAY,EACZE,YAAY,EACZQ,SAAS,EACTb,cAAc,CACf;EACD,OAAOW,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}