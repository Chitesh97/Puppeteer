{"ast":null,"code":"var _jsxFileName = \"/Users/goyac1/Desktop/Projects/puppeteer/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [screenshot, setScreenshot] = useState(null);\n  const takeScreenshot = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/screenshot?url=https://pega.com\");\n      if (!res.ok) {\n        throw new Error(\"Failed to take screenshot\");\n      }\n      const blob = await res.blob();\n      setScreenshot(URL.createObjectURL(blob));\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to fetch screenshot\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: takeScreenshot,\n      children: \"Take Screenshot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" The screenshot once taken will be added below : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), screenshot && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: screenshot,\n      alt: \"Screenshot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5pfTd7JDKUyqJ3hnseRAlt5RpPQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","jsxDEV","_jsxDEV","App","_s","screenshot","setScreenshot","takeScreenshot","res","fetch","ok","Error","blob","URL","createObjectURL","err","console","error","alert","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/goyac1/Desktop/Projects/puppeteer/frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\n\nfunction App() {\n\n  const [screenshot, setScreenshot] = useState(null);\n\n  const takeScreenshot = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/screenshot?url=https://pega.com\");\n\n      if (!res.ok) {\n        throw new Error(\"Failed to take screenshot\");\n      }\n      const blob = await res.blob();\n      setScreenshot(URL.createObjectURL(blob));\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to fetch screenshot\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n\n      <button onClick={takeScreenshot}>Take Screenshot</button>\n      <h2> The screenshot once taken will be added below : </h2>\n      {screenshot && <img src={screenshot} alt=\"Screenshot\" />}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uDAAuD,CAAC;MAEhF,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MACA,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAI,CAAC,CAAC;MAC7BN,aAAa,CAACO,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC,CAAC;IAC1C,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBG,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBlB,OAAA;MAAQmB,OAAO,EAAEd,cAAe;MAAAa,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDvB,OAAA;MAAAkB,QAAA,EAAI;IAAiD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzDpB,UAAU,iBAAIH,OAAA;MAAKwB,GAAG,EAAErB,UAAW;MAACsB,GAAG,EAAC;IAAY;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErD,CAAC;AAEV;AAACrB,EAAA,CA5BQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}