{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ADDRESS_BOUNDARY = void 0;\nexports.groupPossibilities = groupPossibilities;\nexports.padGroup = padGroup;\nexports.simpleRegularExpression = simpleRegularExpression;\nexports.possibleElisions = possibleElisions;\nconst v6 = __importStar(require(\"./constants\"));\nfunction groupPossibilities(possibilities) {\n  return `(${possibilities.join('|')})`;\n}\nfunction padGroup(group) {\n  if (group.length < 4) {\n    return `0{0,${4 - group.length}}${group}`;\n  }\n  return group;\n}\nexports.ADDRESS_BOUNDARY = '[^A-Fa-f0-9:]';\nfunction simpleRegularExpression(groups) {\n  const zeroIndexes = [];\n  groups.forEach((group, i) => {\n    const groupInteger = parseInt(group, 16);\n    if (groupInteger === 0) {\n      zeroIndexes.push(i);\n    }\n  });\n  // You can technically elide a single 0, this creates the regular expressions\n  // to match that eventuality\n  const possibilities = zeroIndexes.map(zeroIndex => groups.map((group, i) => {\n    if (i === zeroIndex) {\n      const elision = i === 0 || i === v6.GROUPS - 1 ? ':' : '';\n      return groupPossibilities([padGroup(group), elision]);\n    }\n    return padGroup(group);\n  }).join(':'));\n  // The simplest case\n  possibilities.push(groups.map(padGroup).join(':'));\n  return groupPossibilities(possibilities);\n}\nfunction possibleElisions(elidedGroups, moreLeft, moreRight) {\n  const left = moreLeft ? '' : ':';\n  const right = moreRight ? '' : ':';\n  const possibilities = [];\n  // 1. elision of everything (::)\n  if (!moreLeft && !moreRight) {\n    possibilities.push('::');\n  }\n  // 2. complete elision of the middle\n  if (moreLeft && moreRight) {\n    possibilities.push('');\n  }\n  if (moreRight && !moreLeft || !moreRight && moreLeft) {\n    // 3. complete elision of one side\n    possibilities.push(':');\n  }\n  // 4. elision from the left side\n  possibilities.push(`${left}(:0{1,4}){1,${elidedGroups - 1}}`);\n  // 5. elision from the right side\n  possibilities.push(`(0{1,4}:){1,${elidedGroups - 1}}${right}`);\n  // 6. no elision\n  possibilities.push(`(0{1,4}:){${elidedGroups - 1}}0{1,4}`);\n  // 7. elision (including sloppy elision) from the middle\n  for (let groups = 1; groups < elidedGroups - 1; groups++) {\n    for (let position = 1; position < elidedGroups - groups; position++) {\n      possibilities.push(`(0{1,4}:){${position}}:(0{1,4}:){${elidedGroups - position - groups - 1}}0{1,4}`);\n    }\n  }\n  return groupPossibilities(possibilities);\n}","map":{"version":3,"names":["exports","groupPossibilities","padGroup","simpleRegularExpression","possibleElisions","v6","__importStar","require","possibilities","join","group","length","ADDRESS_BOUNDARY","groups","zeroIndexes","forEach","i","groupInteger","parseInt","push","map","zeroIndex","elision","GROUPS","elidedGroups","moreLeft","moreRight","left","right","position"],"sources":["/Users/goyac1/Desktop/Projects/puppeteer/node_modules/ip-address/src/v6/regular-expressions.ts"],"sourcesContent":["import * as v6 from './constants';\n\nexport function groupPossibilities(possibilities: string[]): string {\n  return `(${possibilities.join('|')})`;\n}\n\nexport function padGroup(group: string): string {\n  if (group.length < 4) {\n    return `0{0,${4 - group.length}}${group}`;\n  }\n\n  return group;\n}\n\nexport const ADDRESS_BOUNDARY = '[^A-Fa-f0-9:]';\n\nexport function simpleRegularExpression(groups: string[]) {\n  const zeroIndexes: number[] = [];\n\n  groups.forEach((group, i) => {\n    const groupInteger = parseInt(group, 16);\n\n    if (groupInteger === 0) {\n      zeroIndexes.push(i);\n    }\n  });\n\n  // You can technically elide a single 0, this creates the regular expressions\n  // to match that eventuality\n  const possibilities = zeroIndexes.map((zeroIndex) =>\n    groups\n      .map((group, i) => {\n        if (i === zeroIndex) {\n          const elision = i === 0 || i === v6.GROUPS - 1 ? ':' : '';\n\n          return groupPossibilities([padGroup(group), elision]);\n        }\n\n        return padGroup(group);\n      })\n      .join(':'),\n  );\n\n  // The simplest case\n  possibilities.push(groups.map(padGroup).join(':'));\n\n  return groupPossibilities(possibilities);\n}\n\nexport function possibleElisions(\n  elidedGroups: number,\n  moreLeft?: boolean,\n  moreRight?: boolean,\n): string {\n  const left = moreLeft ? '' : ':';\n  const right = moreRight ? '' : ':';\n\n  const possibilities = [];\n\n  // 1. elision of everything (::)\n  if (!moreLeft && !moreRight) {\n    possibilities.push('::');\n  }\n\n  // 2. complete elision of the middle\n  if (moreLeft && moreRight) {\n    possibilities.push('');\n  }\n\n  if ((moreRight && !moreLeft) || (!moreRight && moreLeft)) {\n    // 3. complete elision of one side\n    possibilities.push(':');\n  }\n\n  // 4. elision from the left side\n  possibilities.push(`${left}(:0{1,4}){1,${elidedGroups - 1}}`);\n\n  // 5. elision from the right side\n  possibilities.push(`(0{1,4}:){1,${elidedGroups - 1}}${right}`);\n\n  // 6. no elision\n  possibilities.push(`(0{1,4}:){${elidedGroups - 1}}0{1,4}`);\n\n  // 7. elision (including sloppy elision) from the middle\n  for (let groups = 1; groups < elidedGroups - 1; groups++) {\n    for (let position = 1; position < elidedGroups - groups; position++) {\n      possibilities.push(\n        `(0{1,4}:){${position}}:(0{1,4}:){${elidedGroups - position - groups - 1}}0{1,4}`,\n      );\n    }\n  }\n\n  return groupPossibilities(possibilities);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}