{"ast":null,"code":"var _jsxFileName = \"/Users/goyac1/Desktop/Projects/puppeteer/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [urls, setUrls] = useState(\"https://www.google.com, https://www.github.com\");\n  const [screenshots, setScreenshots] = useState(null);\n  const takeScreenshots = async () => {\n    try {\n      const res = await fetch(`http://localhost:5000/screenshot?url=https://google.com&t=${Date.now()}`);\n      console.log(res);\n      if (!res.ok) {\n        throw new Error(\"Failed to take screenshot\");\n      }\n      const blob = await res.blob();\n      setScreenshots(URL.createObjectURL(blob));\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to fetch screenshot\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Puppeteer example \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 8,\n      columns: 10,\n      value: urls,\n      onChange: e => setUrls(e.target.value),\n      placeholder: \"Enter comma separated values\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: takeScreenshots,\n      children: \"Take Screenshot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" The screenshot once taken will be added below : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), screenshots.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: item.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.screenshot,\n        alt: `Screenshot of ${item.screenshot}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LNxgjSEksjmtnlp8LoJaX6+9QHQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","jsxDEV","_jsxDEV","App","_s","urls","setUrls","screenshots","setScreenshots","takeScreenshots","res","fetch","Date","now","console","log","ok","Error","blob","URL","createObjectURL","err","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","columns","value","onChange","e","target","placeholder","onClick","map","item","index","url","src","screenshot","alt","_c","$RefreshReg$"],"sources":["/Users/goyac1/Desktop/Projects/puppeteer/frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [urls, setUrls] = useState(\"https://www.google.com, https://www.github.com\");\n  const [screenshots, setScreenshots] = useState(null);\n\n  const takeScreenshots = async () => {\n    try {\n      const res = await fetch(`http://localhost:5000/screenshot?url=https://google.com&t=${Date.now()}`);\n      console.log(res);\n\n      if (!res.ok) {\n        throw new Error(\"Failed to take screenshot\");\n      }\n\n      const blob = await res.blob();\n      setScreenshots(URL.createObjectURL(blob));\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to fetch screenshot\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1> Puppeteer example </h1>\n      <textarea\n      rows={8}\n      columns={10}\n      value={urls}\n      onChange={ (e) => setUrls(e.target.value) }\n      placeholder=\"Enter comma separated values\"\n      />\n      <button onClick={takeScreenshots}>Take Screenshot</button>\n      <h2> The screenshot once taken will be added below : </h2>\n      { screenshots.map((item, index) => (\n        <div key={index}>\n          <h3>{item.url}</h3>\n          <img src={item.screenshot} alt={`Screenshot of ${item.screenshot}`} />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,gDAAgD,CAAC;EAClF,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6DAA6DC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC;MAClGC,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;MAEhB,IAAI,CAACA,GAAG,CAACM,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MAEA,MAAMC,IAAI,GAAG,MAAMR,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7BV,cAAc,CAACW,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZP,OAAO,CAACQ,KAAK,CAACD,GAAG,CAAC;MAClBE,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA;MAAAuB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B3B,OAAA;MACA4B,IAAI,EAAE,CAAE;MACRC,OAAO,EAAE,EAAG;MACZC,KAAK,EAAE3B,IAAK;MACZ4B,QAAQ,EAAIC,CAAC,IAAK5B,OAAO,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAG;MAC3CI,WAAW,EAAC;IAA8B;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACF3B,OAAA;MAAQmC,OAAO,EAAE5B,eAAgB;MAAAgB,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1D3B,OAAA;MAAAuB,QAAA,EAAI;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxDtB,WAAW,CAAC+B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC5BtC,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAAuB,QAAA,EAAKc,IAAI,CAACE;MAAG;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnB3B,OAAA;QAAKwC,GAAG,EAAEH,IAAI,CAACI,UAAW;QAACC,GAAG,EAAE,iBAAiBL,IAAI,CAACI,UAAU;MAAG;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAF9DW,KAAK;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACzB,EAAA,CAzCQD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}