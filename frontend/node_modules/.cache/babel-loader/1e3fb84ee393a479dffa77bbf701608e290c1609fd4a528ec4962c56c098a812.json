{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nimport { Frame, FrameEvent, throwIfDetached } from '../api/Frame.js';\nimport { UnsupportedOperation } from '../common/Errors.js';\nimport { debugError } from '../common/util.js';\nimport { Deferred } from '../util/Deferred.js';\nimport { disposeSymbol } from '../util/disposable.js';\nimport { isErrorLike } from '../util/ErrorLike.js';\nimport { Accessibility } from './Accessibility.js';\nimport { FrameManagerEvent } from './FrameManagerEvents.js';\nimport { IsolatedWorld } from './IsolatedWorld.js';\nimport { MAIN_WORLD, PUPPETEER_WORLD } from './IsolatedWorlds.js';\nimport { LifecycleWatcher } from './LifecycleWatcher.js';\nimport { CDP_BINDING_PREFIX } from './utils.js';\n/**\n * @internal\n */\nlet CdpFrame = (() => {\n  let _classSuper = Frame;\n  let _instanceExtraInitializers = [];\n  let _goto_decorators;\n  let _waitForNavigation_decorators;\n  let _setContent_decorators;\n  let _addPreloadScript_decorators;\n  let _addExposedFunctionBinding_decorators;\n  let _removeExposedFunctionBinding_decorators;\n  let _waitForDevicePrompt_decorators;\n  return class CdpFrame extends _classSuper {\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n      __esDecorate(this, null, _goto_decorators, {\n        kind: \"method\",\n        name: \"goto\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"goto\" in obj,\n          get: obj => obj.goto\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _waitForNavigation_decorators, {\n        kind: \"method\",\n        name: \"waitForNavigation\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"waitForNavigation\" in obj,\n          get: obj => obj.waitForNavigation\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _setContent_decorators, {\n        kind: \"method\",\n        name: \"setContent\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"setContent\" in obj,\n          get: obj => obj.setContent\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _addPreloadScript_decorators, {\n        kind: \"method\",\n        name: \"addPreloadScript\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"addPreloadScript\" in obj,\n          get: obj => obj.addPreloadScript\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _addExposedFunctionBinding_decorators, {\n        kind: \"method\",\n        name: \"addExposedFunctionBinding\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"addExposedFunctionBinding\" in obj,\n          get: obj => obj.addExposedFunctionBinding\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _removeExposedFunctionBinding_decorators, {\n        kind: \"method\",\n        name: \"removeExposedFunctionBinding\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"removeExposedFunctionBinding\" in obj,\n          get: obj => obj.removeExposedFunctionBinding\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(this, null, _waitForDevicePrompt_decorators, {\n        kind: \"method\",\n        name: \"waitForDevicePrompt\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"waitForDevicePrompt\" in obj,\n          get: obj => obj.waitForDevicePrompt\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      if (_metadata) Object.defineProperty(this, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n    }\n    #url = (__runInitializers(this, _instanceExtraInitializers), '');\n    #detached = false;\n    #client;\n    _frameManager;\n    _loaderId = '';\n    _lifecycleEvents = new Set();\n    _id;\n    _parentId;\n    accessibility;\n    worlds;\n    constructor(frameManager, frameId, parentFrameId, client) {\n      super();\n      this._frameManager = frameManager;\n      this.#url = '';\n      this._id = frameId;\n      this._parentId = parentFrameId;\n      this.#detached = false;\n      this.#client = client;\n      this._loaderId = '';\n      this.worlds = {\n        [MAIN_WORLD]: new IsolatedWorld(this, this._frameManager.timeoutSettings),\n        [PUPPETEER_WORLD]: new IsolatedWorld(this, this._frameManager.timeoutSettings)\n      };\n      this.accessibility = new Accessibility(this.worlds[MAIN_WORLD], frameId);\n      this.on(FrameEvent.FrameSwappedByActivation, () => {\n        // Emulate loading process for swapped frames.\n        this._onLoadingStarted();\n        this._onLoadingStopped();\n      });\n      this.worlds[MAIN_WORLD].emitter.on('consoleapicalled', this.#onMainWorldConsoleApiCalled.bind(this));\n      this.worlds[MAIN_WORLD].emitter.on('bindingcalled', this.#onMainWorldBindingCalled.bind(this));\n    }\n    #onMainWorldConsoleApiCalled(event) {\n      this._frameManager.emit(FrameManagerEvent.ConsoleApiCalled, [this.worlds[MAIN_WORLD], event]);\n    }\n    #onMainWorldBindingCalled(event) {\n      this._frameManager.emit(FrameManagerEvent.BindingCalled, [this.worlds[MAIN_WORLD], event]);\n    }\n    /**\n     * This is used internally in DevTools.\n     *\n     * @internal\n     */\n    _client() {\n      return this.#client;\n    }\n    /**\n     * Updates the frame ID with the new ID. This happens when the main frame is\n     * replaced by a different frame.\n     */\n    updateId(id) {\n      this._id = id;\n    }\n    updateClient(client) {\n      this.#client = client;\n    }\n    page() {\n      return this._frameManager.page();\n    }\n    async goto(url, options = {}) {\n      const {\n        referer = this._frameManager.networkManager.extraHTTPHeaders()['referer'],\n        referrerPolicy = this._frameManager.networkManager.extraHTTPHeaders()['referer-policy'],\n        waitUntil = ['load'],\n        timeout = this._frameManager.timeoutSettings.navigationTimeout()\n      } = options;\n      let ensureNewDocumentNavigation = false;\n      const watcher = new LifecycleWatcher(this._frameManager.networkManager, this, waitUntil, timeout);\n      let error = await Deferred.race([navigate(this.#client, url, referer, referrerPolicy ? referrerPolicyToProtocol(referrerPolicy) : undefined, this._id), watcher.terminationPromise()]);\n      if (!error) {\n        error = await Deferred.race([watcher.terminationPromise(), ensureNewDocumentNavigation ? watcher.newDocumentNavigationPromise() : watcher.sameDocumentNavigationPromise()]);\n      }\n      try {\n        if (error) {\n          throw error;\n        }\n        return await watcher.navigationResponse();\n      } finally {\n        watcher.dispose();\n      }\n      async function navigate(client, url, referrer, referrerPolicy, frameId) {\n        try {\n          const response = await client.send('Page.navigate', {\n            url,\n            referrer,\n            frameId,\n            referrerPolicy\n          });\n          ensureNewDocumentNavigation = !!response.loaderId;\n          if (response.errorText === 'net::ERR_HTTP_RESPONSE_CODE_FAILURE') {\n            return null;\n          }\n          return response.errorText ? new Error(`${response.errorText} at ${url}`) : null;\n        } catch (error) {\n          if (isErrorLike(error)) {\n            return error;\n          }\n          throw error;\n        }\n      }\n    }\n    async waitForNavigation(options = {}) {\n      const {\n        waitUntil = ['load'],\n        timeout = this._frameManager.timeoutSettings.navigationTimeout(),\n        signal\n      } = options;\n      const watcher = new LifecycleWatcher(this._frameManager.networkManager, this, waitUntil, timeout, signal);\n      const error = await Deferred.race([watcher.terminationPromise(), ...(options.ignoreSameDocumentNavigation ? [] : [watcher.sameDocumentNavigationPromise()]), watcher.newDocumentNavigationPromise()]);\n      try {\n        if (error) {\n          throw error;\n        }\n        const result = await Deferred.race([watcher.terminationPromise(), watcher.navigationResponse()]);\n        if (result instanceof Error) {\n          throw error;\n        }\n        return result || null;\n      } finally {\n        watcher.dispose();\n      }\n    }\n    get client() {\n      return this.#client;\n    }\n    mainRealm() {\n      return this.worlds[MAIN_WORLD];\n    }\n    isolatedRealm() {\n      return this.worlds[PUPPETEER_WORLD];\n    }\n    async setContent(html, options = {}) {\n      const {\n        waitUntil = ['load'],\n        timeout = this._frameManager.timeoutSettings.navigationTimeout()\n      } = options;\n      // We rely upon the fact that document.open() will reset frame lifecycle with \"init\"\n      // lifecycle event. @see https://crrev.com/608658\n      await this.setFrameContent(html);\n      const watcher = new LifecycleWatcher(this._frameManager.networkManager, this, waitUntil, timeout);\n      const error = await Deferred.race([watcher.terminationPromise(), watcher.lifecyclePromise()]);\n      watcher.dispose();\n      if (error) {\n        throw error;\n      }\n    }\n    url() {\n      return this.#url;\n    }\n    parentFrame() {\n      return this._frameManager._frameTree.parentFrame(this._id) || null;\n    }\n    childFrames() {\n      return this._frameManager._frameTree.childFrames(this._id);\n    }\n    #deviceRequestPromptManager() {\n      return this._frameManager._deviceRequestPromptManager(this.#client);\n    }\n    async addPreloadScript(preloadScript) {\n      const parentFrame = this.parentFrame();\n      if (parentFrame && this.#client === parentFrame.client) {\n        return;\n      }\n      if (preloadScript.getIdForFrame(this)) {\n        return;\n      }\n      const {\n        identifier\n      } = await this.#client.send('Page.addScriptToEvaluateOnNewDocument', {\n        source: preloadScript.source\n      });\n      preloadScript.setIdForFrame(this, identifier);\n    }\n    async addExposedFunctionBinding(binding) {\n      // If a frame has not started loading, it might never start. Rely on\n      // addScriptToEvaluateOnNewDocument in that case.\n      if (this !== this._frameManager.mainFrame() && !this._hasStartedLoading) {\n        return;\n      }\n      await Promise.all([this.#client.send('Runtime.addBinding', {\n        name: CDP_BINDING_PREFIX + binding.name\n      }), this.evaluate(binding.initSource).catch(debugError)]);\n    }\n    async removeExposedFunctionBinding(binding) {\n      // If a frame has not started loading, it might never start. Rely on\n      // addScriptToEvaluateOnNewDocument in that case.\n      if (this !== this._frameManager.mainFrame() && !this._hasStartedLoading) {\n        return;\n      }\n      await Promise.all([this.#client.send('Runtime.removeBinding', {\n        name: CDP_BINDING_PREFIX + binding.name\n      }), this.evaluate(name => {\n        // Removes the dangling Puppeteer binding wrapper.\n        // @ts-expect-error: In a different context.\n        globalThis[name] = undefined;\n      }, binding.name).catch(debugError)]);\n    }\n    async waitForDevicePrompt(options = {}) {\n      return await this.#deviceRequestPromptManager().waitForDevicePrompt(options);\n    }\n    _navigated(framePayload) {\n      this._name = framePayload.name;\n      this.#url = `${framePayload.url}${framePayload.urlFragment || ''}`;\n    }\n    _navigatedWithinDocument(url) {\n      this.#url = url;\n    }\n    _onLifecycleEvent(loaderId, name) {\n      if (name === 'init') {\n        this._loaderId = loaderId;\n        this._lifecycleEvents.clear();\n      }\n      this._lifecycleEvents.add(name);\n    }\n    _onLoadingStopped() {\n      this._lifecycleEvents.add('DOMContentLoaded');\n      this._lifecycleEvents.add('load');\n    }\n    _onLoadingStarted() {\n      this._hasStartedLoading = true;\n    }\n    get detached() {\n      return this.#detached;\n    }\n    [(_goto_decorators = [throwIfDetached], _waitForNavigation_decorators = [throwIfDetached], _setContent_decorators = [throwIfDetached], _addPreloadScript_decorators = [throwIfDetached], _addExposedFunctionBinding_decorators = [throwIfDetached], _removeExposedFunctionBinding_decorators = [throwIfDetached], _waitForDevicePrompt_decorators = [throwIfDetached], disposeSymbol)]() {\n      if (this.#detached) {\n        return;\n      }\n      this.#detached = true;\n      this.worlds[MAIN_WORLD][disposeSymbol]();\n      this.worlds[PUPPETEER_WORLD][disposeSymbol]();\n    }\n    exposeFunction() {\n      throw new UnsupportedOperation();\n    }\n    async frameElement() {\n      const parent = this.parentFrame();\n      if (!parent) {\n        return null;\n      }\n      const {\n        backendNodeId\n      } = await parent.client.send('DOM.getFrameOwner', {\n        frameId: this._id\n      });\n      return await parent.mainRealm().adoptBackendNode(backendNodeId);\n    }\n  };\n})();\nexport { CdpFrame };\n/**\n * @internal\n */\nexport function referrerPolicyToProtocol(referrerPolicy) {\n  // See\n  // https://chromedevtools.github.io/devtools-protocol/tot/Page/#type-ReferrerPolicy\n  // We need to conver from Web-facing phase to CDP's camelCase.\n  return referrerPolicy.replaceAll(/-./g, match => {\n    return match[1].toUpperCase();\n  });\n}","map":{"version":3,"names":["Frame","FrameEvent","throwIfDetached","UnsupportedOperation","debugError","Deferred","disposeSymbol","isErrorLike","Accessibility","FrameManagerEvent","IsolatedWorld","MAIN_WORLD","PUPPETEER_WORLD","LifecycleWatcher","CDP_BINDING_PREFIX","CdpFrame","_classSuper","__esDecorate","_goto_decorators","kind","name","static","private","access","has","obj","get","goto","metadata","_metadata","_instanceExtraInitializers","_waitForNavigation_decorators","waitForNavigation","_setContent_decorators","setContent","_addPreloadScript_decorators","addPreloadScript","_addExposedFunctionBinding_decorators","addExposedFunctionBinding","_removeExposedFunctionBinding_decorators","removeExposedFunctionBinding","_waitForDevicePrompt_decorators","waitForDevicePrompt","url","__runInitializers","detached","client","_frameManager","_loaderId","_lifecycleEvents","Set","_id","_parentId","accessibility","worlds","constructor","frameManager","frameId","parentFrameId","timeoutSettings","on","FrameSwappedByActivation","_onLoadingStarted","_onLoadingStopped","emitter","onMainWorldConsoleApiCalled","bind","onMainWorldBindingCalled","#onMainWorldConsoleApiCalled","event","emit","ConsoleApiCalled","#onMainWorldBindingCalled","BindingCalled","_client","updateId","id","updateClient","page","options","referer","networkManager","extraHTTPHeaders","referrerPolicy","waitUntil","timeout","navigationTimeout","ensureNewDocumentNavigation","watcher","error","race","navigate","referrerPolicyToProtocol","undefined","terminationPromise","newDocumentNavigationPromise","sameDocumentNavigationPromise","navigationResponse","dispose","referrer","response","send","loaderId","errorText","Error","signal","ignoreSameDocumentNavigation","result","mainRealm","isolatedRealm","html","setFrameContent","lifecyclePromise","parentFrame","_frameTree","childFrames","deviceRequestPromptManager","#deviceRequestPromptManager","_deviceRequestPromptManager","preloadScript","getIdForFrame","identifier","source","setIdForFrame","binding","mainFrame","_hasStartedLoading","Promise","all","evaluate","initSource","catch","globalThis","_navigated","framePayload","_name","urlFragment","_navigatedWithinDocument","_onLifecycleEvent","clear","add","exposeFunction","frameElement","parent","backendNodeId","adoptBackendNode","replaceAll","match","toUpperCase"],"sources":["/Users/goyac1/Desktop/Projects/puppeteer/node_modules/puppeteer-core/src/cdp/Frame.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type {Protocol} from 'devtools-protocol';\n\nimport type {CDPSession} from '../api/CDPSession.js';\nimport type {ElementHandle} from '../api/ElementHandle.js';\nimport type {WaitForOptions} from '../api/Frame.js';\nimport {Frame, FrameEvent, throwIfDetached} from '../api/Frame.js';\nimport type {HTTPResponse} from '../api/HTTPResponse.js';\nimport type {WaitTimeoutOptions} from '../api/Page.js';\nimport {UnsupportedOperation} from '../common/Errors.js';\nimport {debugError} from '../common/util.js';\nimport {Deferred} from '../util/Deferred.js';\nimport {disposeSymbol} from '../util/disposable.js';\nimport {isErrorLike} from '../util/ErrorLike.js';\n\nimport {Accessibility} from './Accessibility.js';\nimport type {Binding} from './Binding.js';\nimport type {CdpPreloadScript} from './CdpPreloadScript.js';\nimport type {\n  DeviceRequestPrompt,\n  DeviceRequestPromptManager,\n} from './DeviceRequestPrompt.js';\nimport type {FrameManager} from './FrameManager.js';\nimport {FrameManagerEvent} from './FrameManagerEvents.js';\nimport type {IsolatedWorldChart} from './IsolatedWorld.js';\nimport {IsolatedWorld} from './IsolatedWorld.js';\nimport {MAIN_WORLD, PUPPETEER_WORLD} from './IsolatedWorlds.js';\nimport {\n  LifecycleWatcher,\n  type PuppeteerLifeCycleEvent,\n} from './LifecycleWatcher.js';\nimport type {CdpPage} from './Page.js';\nimport {CDP_BINDING_PREFIX} from './utils.js';\n\n/**\n * @internal\n */\nexport class CdpFrame extends Frame {\n  #url = '';\n  #detached = false;\n  #client: CDPSession;\n\n  _frameManager: FrameManager;\n  _loaderId = '';\n  _lifecycleEvents = new Set<string>();\n\n  override _id: string;\n  override _parentId?: string;\n  override accessibility: Accessibility;\n\n  worlds: IsolatedWorldChart;\n\n  constructor(\n    frameManager: FrameManager,\n    frameId: string,\n    parentFrameId: string | undefined,\n    client: CDPSession,\n  ) {\n    super();\n    this._frameManager = frameManager;\n    this.#url = '';\n    this._id = frameId;\n    this._parentId = parentFrameId;\n    this.#detached = false;\n    this.#client = client;\n\n    this._loaderId = '';\n    this.worlds = {\n      [MAIN_WORLD]: new IsolatedWorld(this, this._frameManager.timeoutSettings),\n      [PUPPETEER_WORLD]: new IsolatedWorld(\n        this,\n        this._frameManager.timeoutSettings,\n      ),\n    };\n\n    this.accessibility = new Accessibility(this.worlds[MAIN_WORLD], frameId);\n\n    this.on(FrameEvent.FrameSwappedByActivation, () => {\n      // Emulate loading process for swapped frames.\n      this._onLoadingStarted();\n      this._onLoadingStopped();\n    });\n\n    this.worlds[MAIN_WORLD].emitter.on(\n      'consoleapicalled',\n      this.#onMainWorldConsoleApiCalled.bind(this),\n    );\n    this.worlds[MAIN_WORLD].emitter.on(\n      'bindingcalled',\n      this.#onMainWorldBindingCalled.bind(this),\n    );\n  }\n\n  #onMainWorldConsoleApiCalled(\n    event: Protocol.Runtime.ConsoleAPICalledEvent,\n  ): void {\n    this._frameManager.emit(FrameManagerEvent.ConsoleApiCalled, [\n      this.worlds[MAIN_WORLD],\n      event,\n    ]);\n  }\n\n  #onMainWorldBindingCalled(event: Protocol.Runtime.BindingCalledEvent) {\n    this._frameManager.emit(FrameManagerEvent.BindingCalled, [\n      this.worlds[MAIN_WORLD],\n      event,\n    ]);\n  }\n\n  /**\n   * This is used internally in DevTools.\n   *\n   * @internal\n   */\n  _client(): CDPSession {\n    return this.#client;\n  }\n\n  /**\n   * Updates the frame ID with the new ID. This happens when the main frame is\n   * replaced by a different frame.\n   */\n  updateId(id: string): void {\n    this._id = id;\n  }\n\n  updateClient(client: CDPSession): void {\n    this.#client = client;\n  }\n\n  override page(): CdpPage {\n    return this._frameManager.page();\n  }\n\n  @throwIfDetached\n  override async goto(\n    url: string,\n    options: {\n      referer?: string;\n      referrerPolicy?: string;\n      timeout?: number;\n      waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n    } = {},\n  ): Promise<HTTPResponse | null> {\n    const {\n      referer = this._frameManager.networkManager.extraHTTPHeaders()['referer'],\n      referrerPolicy = this._frameManager.networkManager.extraHTTPHeaders()[\n        'referer-policy'\n      ],\n      waitUntil = ['load'],\n      timeout = this._frameManager.timeoutSettings.navigationTimeout(),\n    } = options;\n\n    let ensureNewDocumentNavigation = false;\n    const watcher = new LifecycleWatcher(\n      this._frameManager.networkManager,\n      this,\n      waitUntil,\n      timeout,\n    );\n    let error = await Deferred.race([\n      navigate(\n        this.#client,\n        url,\n        referer,\n        referrerPolicy ? referrerPolicyToProtocol(referrerPolicy) : undefined,\n        this._id,\n      ),\n      watcher.terminationPromise(),\n    ]);\n    if (!error) {\n      error = await Deferred.race([\n        watcher.terminationPromise(),\n        ensureNewDocumentNavigation\n          ? watcher.newDocumentNavigationPromise()\n          : watcher.sameDocumentNavigationPromise(),\n      ]);\n    }\n\n    try {\n      if (error) {\n        throw error;\n      }\n      return await watcher.navigationResponse();\n    } finally {\n      watcher.dispose();\n    }\n\n    async function navigate(\n      client: CDPSession,\n      url: string,\n      referrer: string | undefined,\n      referrerPolicy: Protocol.Page.ReferrerPolicy | undefined,\n      frameId: string,\n    ): Promise<Error | null> {\n      try {\n        const response = await client.send('Page.navigate', {\n          url,\n          referrer,\n          frameId,\n          referrerPolicy,\n        });\n        ensureNewDocumentNavigation = !!response.loaderId;\n        if (response.errorText === 'net::ERR_HTTP_RESPONSE_CODE_FAILURE') {\n          return null;\n        }\n        return response.errorText\n          ? new Error(`${response.errorText} at ${url}`)\n          : null;\n      } catch (error) {\n        if (isErrorLike(error)) {\n          return error;\n        }\n        throw error;\n      }\n    }\n  }\n\n  @throwIfDetached\n  override async waitForNavigation(\n    options: WaitForOptions = {},\n  ): Promise<HTTPResponse | null> {\n    const {\n      waitUntil = ['load'],\n      timeout = this._frameManager.timeoutSettings.navigationTimeout(),\n      signal,\n    } = options;\n    const watcher = new LifecycleWatcher(\n      this._frameManager.networkManager,\n      this,\n      waitUntil,\n      timeout,\n      signal,\n    );\n    const error = await Deferred.race([\n      watcher.terminationPromise(),\n      ...(options.ignoreSameDocumentNavigation\n        ? []\n        : [watcher.sameDocumentNavigationPromise()]),\n      watcher.newDocumentNavigationPromise(),\n    ]);\n    try {\n      if (error) {\n        throw error;\n      }\n      const result = await Deferred.race<\n        Error | HTTPResponse | null | undefined\n      >([watcher.terminationPromise(), watcher.navigationResponse()]);\n      if (result instanceof Error) {\n        throw error;\n      }\n      return result || null;\n    } finally {\n      watcher.dispose();\n    }\n  }\n\n  override get client(): CDPSession {\n    return this.#client;\n  }\n\n  override mainRealm(): IsolatedWorld {\n    return this.worlds[MAIN_WORLD];\n  }\n\n  override isolatedRealm(): IsolatedWorld {\n    return this.worlds[PUPPETEER_WORLD];\n  }\n\n  @throwIfDetached\n  override async setContent(\n    html: string,\n    options: {\n      timeout?: number;\n      waitUntil?: PuppeteerLifeCycleEvent | PuppeteerLifeCycleEvent[];\n    } = {},\n  ): Promise<void> {\n    const {\n      waitUntil = ['load'],\n      timeout = this._frameManager.timeoutSettings.navigationTimeout(),\n    } = options;\n\n    // We rely upon the fact that document.open() will reset frame lifecycle with \"init\"\n    // lifecycle event. @see https://crrev.com/608658\n    await this.setFrameContent(html);\n\n    const watcher = new LifecycleWatcher(\n      this._frameManager.networkManager,\n      this,\n      waitUntil,\n      timeout,\n    );\n    const error = await Deferred.race<void | Error | undefined>([\n      watcher.terminationPromise(),\n      watcher.lifecyclePromise(),\n    ]);\n    watcher.dispose();\n    if (error) {\n      throw error;\n    }\n  }\n\n  override url(): string {\n    return this.#url;\n  }\n\n  override parentFrame(): CdpFrame | null {\n    return this._frameManager._frameTree.parentFrame(this._id) || null;\n  }\n\n  override childFrames(): CdpFrame[] {\n    return this._frameManager._frameTree.childFrames(this._id);\n  }\n\n  #deviceRequestPromptManager(): DeviceRequestPromptManager {\n    return this._frameManager._deviceRequestPromptManager(this.#client);\n  }\n\n  @throwIfDetached\n  async addPreloadScript(preloadScript: CdpPreloadScript): Promise<void> {\n    const parentFrame = this.parentFrame();\n    if (parentFrame && this.#client === parentFrame.client) {\n      return;\n    }\n    if (preloadScript.getIdForFrame(this)) {\n      return;\n    }\n    const {identifier} = await this.#client.send(\n      'Page.addScriptToEvaluateOnNewDocument',\n      {\n        source: preloadScript.source,\n      },\n    );\n    preloadScript.setIdForFrame(this, identifier);\n  }\n\n  @throwIfDetached\n  async addExposedFunctionBinding(binding: Binding): Promise<void> {\n    // If a frame has not started loading, it might never start. Rely on\n    // addScriptToEvaluateOnNewDocument in that case.\n    if (this !== this._frameManager.mainFrame() && !this._hasStartedLoading) {\n      return;\n    }\n    await Promise.all([\n      this.#client.send('Runtime.addBinding', {\n        name: CDP_BINDING_PREFIX + binding.name,\n      }),\n      this.evaluate(binding.initSource).catch(debugError),\n    ]);\n  }\n\n  @throwIfDetached\n  async removeExposedFunctionBinding(binding: Binding): Promise<void> {\n    // If a frame has not started loading, it might never start. Rely on\n    // addScriptToEvaluateOnNewDocument in that case.\n    if (this !== this._frameManager.mainFrame() && !this._hasStartedLoading) {\n      return;\n    }\n    await Promise.all([\n      this.#client.send('Runtime.removeBinding', {\n        name: CDP_BINDING_PREFIX + binding.name,\n      }),\n      this.evaluate(name => {\n        // Removes the dangling Puppeteer binding wrapper.\n        // @ts-expect-error: In a different context.\n        globalThis[name] = undefined;\n      }, binding.name).catch(debugError),\n    ]);\n  }\n\n  @throwIfDetached\n  override async waitForDevicePrompt(\n    options: WaitTimeoutOptions = {},\n  ): Promise<DeviceRequestPrompt> {\n    return await this.#deviceRequestPromptManager().waitForDevicePrompt(\n      options,\n    );\n  }\n\n  _navigated(framePayload: Protocol.Page.Frame): void {\n    this._name = framePayload.name;\n    this.#url = `${framePayload.url}${framePayload.urlFragment || ''}`;\n  }\n\n  _navigatedWithinDocument(url: string): void {\n    this.#url = url;\n  }\n\n  _onLifecycleEvent(loaderId: string, name: string): void {\n    if (name === 'init') {\n      this._loaderId = loaderId;\n      this._lifecycleEvents.clear();\n    }\n    this._lifecycleEvents.add(name);\n  }\n\n  _onLoadingStopped(): void {\n    this._lifecycleEvents.add('DOMContentLoaded');\n    this._lifecycleEvents.add('load');\n  }\n\n  _onLoadingStarted(): void {\n    this._hasStartedLoading = true;\n  }\n\n  override get detached(): boolean {\n    return this.#detached;\n  }\n\n  override [disposeSymbol](): void {\n    if (this.#detached) {\n      return;\n    }\n    this.#detached = true;\n    this.worlds[MAIN_WORLD][disposeSymbol]();\n    this.worlds[PUPPETEER_WORLD][disposeSymbol]();\n  }\n\n  exposeFunction(): never {\n    throw new UnsupportedOperation();\n  }\n\n  override async frameElement(): Promise<ElementHandle<HTMLIFrameElement> | null> {\n    const parent = this.parentFrame();\n    if (!parent) {\n      return null;\n    }\n    const {backendNodeId} = await parent.client.send('DOM.getFrameOwner', {\n      frameId: this._id,\n    });\n    return (await parent\n      .mainRealm()\n      .adoptBackendNode(backendNodeId)) as ElementHandle<HTMLIFrameElement>;\n  }\n}\n\n/**\n * @internal\n */\nexport function referrerPolicyToProtocol(\n  referrerPolicy: string,\n): Protocol.Page.ReferrerPolicy {\n  // See\n  // https://chromedevtools.github.io/devtools-protocol/tot/Page/#type-ReferrerPolicy\n  // We need to conver from Web-facing phase to CDP's camelCase.\n  return referrerPolicy.replaceAll(/-./g, match => {\n    return match[1]!.toUpperCase();\n  }) as Protocol.Page.ReferrerPolicy;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}