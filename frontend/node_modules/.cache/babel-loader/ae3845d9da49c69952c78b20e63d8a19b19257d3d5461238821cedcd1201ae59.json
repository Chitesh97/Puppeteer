{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport fs from 'node:fs';\nimport { rename, unlink, mkdtemp } from 'node:fs/promises';\nimport os from 'node:os';\nimport path from 'node:path';\nimport { Browser as SupportedBrowsers, createProfile } from '@puppeteer/browsers';\nimport { debugError } from '../common/util.js';\nimport { assert } from '../util/assert.js';\nimport { BrowserLauncher } from './BrowserLauncher.js';\nimport { rm } from './util/fs.js';\n/**\n * @internal\n */\nexport class FirefoxLauncher extends BrowserLauncher {\n  constructor(puppeteer) {\n    super(puppeteer, 'firefox');\n  }\n  static getPreferences(extraPrefsFirefox) {\n    return {\n      ...extraPrefsFirefox,\n      // Force all web content to use a single content process. TODO: remove\n      // this once Firefox supports mouse event dispatch from the main frame\n      // context. See https://bugzilla.mozilla.org/show_bug.cgi?id=1773393.\n      'fission.webContentIsolationStrategy': 0\n    };\n  }\n  /**\n   * @internal\n   */\n  async computeLaunchArguments(options = {}) {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      executablePath,\n      pipe = false,\n      extraPrefsFirefox = {},\n      debuggingPort = null\n    } = options;\n    const firefoxArguments = [];\n    if (!ignoreDefaultArgs) {\n      firefoxArguments.push(...this.defaultArgs(options));\n    } else if (Array.isArray(ignoreDefaultArgs)) {\n      firefoxArguments.push(...this.defaultArgs(options).filter(arg => {\n        return !ignoreDefaultArgs.includes(arg);\n      }));\n    } else {\n      firefoxArguments.push(...args);\n    }\n    if (!firefoxArguments.some(argument => {\n      return argument.startsWith('--remote-debugging-');\n    })) {\n      if (pipe) {\n        assert(debuggingPort === null, 'Browser should be launched with either pipe or debugging port - not both.');\n      }\n      firefoxArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);\n    }\n    let userDataDir;\n    let isTempUserDataDir = true;\n    // Check for the profile argument, which will always be set even\n    // with a custom directory specified via the userDataDir option.\n    const profileArgIndex = firefoxArguments.findIndex(arg => {\n      return ['-profile', '--profile'].includes(arg);\n    });\n    if (profileArgIndex !== -1) {\n      userDataDir = firefoxArguments[profileArgIndex + 1];\n      if (!userDataDir) {\n        throw new Error(`Missing value for profile command line argument`);\n      }\n      // When using a custom Firefox profile it needs to be populated\n      // with required preferences.\n      isTempUserDataDir = false;\n    } else {\n      userDataDir = await mkdtemp(this.getProfilePath());\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n    await createProfile(SupportedBrowsers.FIREFOX, {\n      path: userDataDir,\n      preferences: FirefoxLauncher.getPreferences(extraPrefsFirefox)\n    });\n    let firefoxExecutable;\n    if (this.puppeteer._isPuppeteerCore || executablePath) {\n      assert(executablePath, `An \\`executablePath\\` must be specified for \\`puppeteer-core\\``);\n      firefoxExecutable = executablePath;\n    } else {\n      firefoxExecutable = this.executablePath(undefined);\n    }\n    return {\n      isTempUserDataDir,\n      userDataDir,\n      args: firefoxArguments,\n      executablePath: firefoxExecutable\n    };\n  }\n  /**\n   * @internal\n   */\n  async cleanUserDataDir(userDataDir, opts) {\n    if (opts.isTemp) {\n      try {\n        await rm(userDataDir);\n      } catch (error) {\n        debugError(error);\n        throw error;\n      }\n    } else {\n      try {\n        const backupSuffix = '.puppeteer';\n        const backupFiles = ['prefs.js', 'user.js'];\n        const results = await Promise.allSettled(backupFiles.map(async file => {\n          const prefsBackupPath = path.join(userDataDir, file + backupSuffix);\n          if (fs.existsSync(prefsBackupPath)) {\n            const prefsPath = path.join(userDataDir, file);\n            await unlink(prefsPath);\n            await rename(prefsBackupPath, prefsPath);\n          }\n        }));\n        for (const result of results) {\n          if (result.status === 'rejected') {\n            throw result.reason;\n          }\n        }\n      } catch (error) {\n        debugError(error);\n      }\n    }\n  }\n  executablePath(_, validatePath = true) {\n    return this.resolveExecutablePath(undefined, /* validatePath=*/validatePath);\n  }\n  defaultArgs(options = {}) {\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n    const firefoxArguments = [];\n    switch (os.platform()) {\n      case 'darwin':\n        firefoxArguments.push('--foreground');\n        break;\n      case 'win32':\n        firefoxArguments.push('--wait-for-browser');\n        break;\n    }\n    if (userDataDir) {\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n    if (headless) {\n      firefoxArguments.push('--headless');\n    }\n    if (devtools) {\n      firefoxArguments.push('--devtools');\n    }\n    if (args.every(arg => {\n      return arg.startsWith('-');\n    })) {\n      firefoxArguments.push('about:blank');\n    }\n    firefoxArguments.push(...args);\n    return firefoxArguments;\n  }\n}","map":{"version":3,"names":["fs","rename","unlink","mkdtemp","os","path","Browser","SupportedBrowsers","createProfile","debugError","assert","BrowserLauncher","rm","FirefoxLauncher","constructor","puppeteer","getPreferences","extraPrefsFirefox","computeLaunchArguments","options","ignoreDefaultArgs","args","executablePath","pipe","debuggingPort","firefoxArguments","push","defaultArgs","Array","isArray","filter","arg","includes","some","argument","startsWith","userDataDir","isTempUserDataDir","profileArgIndex","findIndex","Error","getProfilePath","FIREFOX","preferences","firefoxExecutable","_isPuppeteerCore","undefined","cleanUserDataDir","opts","isTemp","error","backupSuffix","backupFiles","results","Promise","allSettled","map","file","prefsBackupPath","join","existsSync","prefsPath","result","status","reason","_","validatePath","resolveExecutablePath","devtools","headless","platform","every"],"sources":["/Users/goyac1/Desktop/Projects/puppeteer/node_modules/puppeteer-core/src/node/FirefoxLauncher.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport fs from 'node:fs';\nimport {rename, unlink, mkdtemp} from 'node:fs/promises';\nimport os from 'node:os';\nimport path from 'node:path';\n\nimport {Browser as SupportedBrowsers, createProfile} from '@puppeteer/browsers';\n\nimport {debugError} from '../common/util.js';\nimport {assert} from '../util/assert.js';\n\nimport {BrowserLauncher, type ResolvedLaunchArgs} from './BrowserLauncher.js';\nimport type {LaunchOptions} from './LaunchOptions.js';\nimport type {PuppeteerNode} from './PuppeteerNode.js';\nimport {rm} from './util/fs.js';\n\n/**\n * @internal\n */\nexport class FirefoxLauncher extends BrowserLauncher {\n  constructor(puppeteer: PuppeteerNode) {\n    super(puppeteer, 'firefox');\n  }\n\n  static getPreferences(\n    extraPrefsFirefox?: Record<string, unknown>,\n  ): Record<string, unknown> {\n    return {\n      ...extraPrefsFirefox,\n      // Force all web content to use a single content process. TODO: remove\n      // this once Firefox supports mouse event dispatch from the main frame\n      // context. See https://bugzilla.mozilla.org/show_bug.cgi?id=1773393.\n      'fission.webContentIsolationStrategy': 0,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  override async computeLaunchArguments(\n    options: LaunchOptions = {},\n  ): Promise<ResolvedLaunchArgs> {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      executablePath,\n      pipe = false,\n      extraPrefsFirefox = {},\n      debuggingPort = null,\n    } = options;\n\n    const firefoxArguments = [];\n    if (!ignoreDefaultArgs) {\n      firefoxArguments.push(...this.defaultArgs(options));\n    } else if (Array.isArray(ignoreDefaultArgs)) {\n      firefoxArguments.push(\n        ...this.defaultArgs(options).filter(arg => {\n          return !ignoreDefaultArgs.includes(arg);\n        }),\n      );\n    } else {\n      firefoxArguments.push(...args);\n    }\n\n    if (\n      !firefoxArguments.some(argument => {\n        return argument.startsWith('--remote-debugging-');\n      })\n    ) {\n      if (pipe) {\n        assert(\n          debuggingPort === null,\n          'Browser should be launched with either pipe or debugging port - not both.',\n        );\n      }\n      firefoxArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);\n    }\n\n    let userDataDir: string | undefined;\n    let isTempUserDataDir = true;\n\n    // Check for the profile argument, which will always be set even\n    // with a custom directory specified via the userDataDir option.\n    const profileArgIndex = firefoxArguments.findIndex(arg => {\n      return ['-profile', '--profile'].includes(arg);\n    });\n\n    if (profileArgIndex !== -1) {\n      userDataDir = firefoxArguments[profileArgIndex + 1];\n      if (!userDataDir) {\n        throw new Error(`Missing value for profile command line argument`);\n      }\n\n      // When using a custom Firefox profile it needs to be populated\n      // with required preferences.\n      isTempUserDataDir = false;\n    } else {\n      userDataDir = await mkdtemp(this.getProfilePath());\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n\n    await createProfile(SupportedBrowsers.FIREFOX, {\n      path: userDataDir,\n      preferences: FirefoxLauncher.getPreferences(extraPrefsFirefox),\n    });\n\n    let firefoxExecutable: string;\n    if (this.puppeteer._isPuppeteerCore || executablePath) {\n      assert(\n        executablePath,\n        `An \\`executablePath\\` must be specified for \\`puppeteer-core\\``,\n      );\n      firefoxExecutable = executablePath;\n    } else {\n      firefoxExecutable = this.executablePath(undefined);\n    }\n\n    return {\n      isTempUserDataDir,\n      userDataDir,\n      args: firefoxArguments,\n      executablePath: firefoxExecutable,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  override async cleanUserDataDir(\n    userDataDir: string,\n    opts: {isTemp: boolean},\n  ): Promise<void> {\n    if (opts.isTemp) {\n      try {\n        await rm(userDataDir);\n      } catch (error) {\n        debugError(error);\n        throw error;\n      }\n    } else {\n      try {\n        const backupSuffix = '.puppeteer';\n        const backupFiles = ['prefs.js', 'user.js'];\n\n        const results = await Promise.allSettled(\n          backupFiles.map(async file => {\n            const prefsBackupPath = path.join(userDataDir, file + backupSuffix);\n            if (fs.existsSync(prefsBackupPath)) {\n              const prefsPath = path.join(userDataDir, file);\n              await unlink(prefsPath);\n              await rename(prefsBackupPath, prefsPath);\n            }\n          }),\n        );\n        for (const result of results) {\n          if (result.status === 'rejected') {\n            throw result.reason;\n          }\n        }\n      } catch (error) {\n        debugError(error);\n      }\n    }\n  }\n\n  override executablePath(_: unknown, validatePath = true): string {\n    return this.resolveExecutablePath(\n      undefined,\n      /* validatePath=*/ validatePath,\n    );\n  }\n\n  override defaultArgs(options: LaunchOptions = {}): string[] {\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null,\n    } = options;\n\n    const firefoxArguments = [];\n\n    switch (os.platform()) {\n      case 'darwin':\n        firefoxArguments.push('--foreground');\n        break;\n      case 'win32':\n        firefoxArguments.push('--wait-for-browser');\n        break;\n    }\n    if (userDataDir) {\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n    if (headless) {\n      firefoxArguments.push('--headless');\n    }\n    if (devtools) {\n      firefoxArguments.push('--devtools');\n    }\n    if (\n      args.every(arg => {\n        return arg.startsWith('-');\n      })\n    ) {\n      firefoxArguments.push('about:blank');\n    }\n    firefoxArguments.push(...args);\n    return firefoxArguments;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}