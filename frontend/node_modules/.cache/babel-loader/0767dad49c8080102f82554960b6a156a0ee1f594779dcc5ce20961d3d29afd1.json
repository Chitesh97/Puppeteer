{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport fs from 'node:fs';\nimport path from 'node:path';\nimport { getJSON } from '../httpUtil.js';\nimport { BrowserPlatform } from './types.js';\nfunction getFormat(buildId) {\n  const majorVersion = Number(buildId.split('.').shift());\n  return majorVersion >= 135 ? 'xz' : 'bz2';\n}\nfunction archiveNightly(platform, buildId) {\n  switch (platform) {\n    case BrowserPlatform.LINUX:\n      return `firefox-${buildId}.en-US.linux-x86_64.tar.${getFormat(buildId)}`;\n    case BrowserPlatform.LINUX_ARM:\n      return `firefox-${buildId}.en-US.linux-aarch64.tar.${getFormat(buildId)}`;\n    case BrowserPlatform.MAC_ARM:\n    case BrowserPlatform.MAC:\n      return `firefox-${buildId}.en-US.mac.dmg`;\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      return `firefox-${buildId}.en-US.${platform}.zip`;\n  }\n}\nfunction archive(platform, buildId) {\n  switch (platform) {\n    case BrowserPlatform.LINUX_ARM:\n    case BrowserPlatform.LINUX:\n      return `firefox-${buildId}.tar.${getFormat(buildId)}`;\n    case BrowserPlatform.MAC_ARM:\n    case BrowserPlatform.MAC:\n      return `Firefox ${buildId}.dmg`;\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      return `Firefox Setup ${buildId}.exe`;\n  }\n}\nfunction platformName(platform) {\n  switch (platform) {\n    case BrowserPlatform.LINUX:\n      return `linux-x86_64`;\n    case BrowserPlatform.LINUX_ARM:\n      return `linux-aarch64`;\n    case BrowserPlatform.MAC_ARM:\n    case BrowserPlatform.MAC:\n      return `mac`;\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      return platform;\n  }\n}\nfunction parseBuildId(buildId) {\n  for (const value of Object.values(FirefoxChannel)) {\n    if (buildId.startsWith(value + '_')) {\n      buildId = buildId.substring(value.length + 1);\n      return [value, buildId];\n    }\n  }\n  // Older versions do not have channel as the prefix.Â«\n  return [FirefoxChannel.NIGHTLY, buildId];\n}\nexport function resolveDownloadUrl(platform, buildId, baseUrl) {\n  const [channel] = parseBuildId(buildId);\n  switch (channel) {\n    case FirefoxChannel.NIGHTLY:\n      baseUrl ??= 'https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central';\n      break;\n    case FirefoxChannel.DEVEDITION:\n      baseUrl ??= 'https://archive.mozilla.org/pub/devedition/releases';\n      break;\n    case FirefoxChannel.BETA:\n    case FirefoxChannel.STABLE:\n    case FirefoxChannel.ESR:\n      baseUrl ??= 'https://archive.mozilla.org/pub/firefox/releases';\n      break;\n  }\n  return `${baseUrl}/${resolveDownloadPath(platform, buildId).join('/')}`;\n}\nexport function resolveDownloadPath(platform, buildId) {\n  const [channel, resolvedBuildId] = parseBuildId(buildId);\n  switch (channel) {\n    case FirefoxChannel.NIGHTLY:\n      return [archiveNightly(platform, resolvedBuildId)];\n    case FirefoxChannel.DEVEDITION:\n    case FirefoxChannel.BETA:\n    case FirefoxChannel.STABLE:\n    case FirefoxChannel.ESR:\n      return [resolvedBuildId, platformName(platform), 'en-US', archive(platform, resolvedBuildId)];\n  }\n}\nexport function relativeExecutablePath(platform, buildId) {\n  const [channel] = parseBuildId(buildId);\n  switch (channel) {\n    case FirefoxChannel.NIGHTLY:\n      switch (platform) {\n        case BrowserPlatform.MAC_ARM:\n        case BrowserPlatform.MAC:\n          return path.join('Firefox Nightly.app', 'Contents', 'MacOS', 'firefox');\n        case BrowserPlatform.LINUX_ARM:\n        case BrowserPlatform.LINUX:\n          return path.join('firefox', 'firefox');\n        case BrowserPlatform.WIN32:\n        case BrowserPlatform.WIN64:\n          return path.join('firefox', 'firefox.exe');\n      }\n    case FirefoxChannel.BETA:\n    case FirefoxChannel.DEVEDITION:\n    case FirefoxChannel.ESR:\n    case FirefoxChannel.STABLE:\n      switch (platform) {\n        case BrowserPlatform.MAC_ARM:\n        case BrowserPlatform.MAC:\n          return path.join('Firefox.app', 'Contents', 'MacOS', 'firefox');\n        case BrowserPlatform.LINUX_ARM:\n        case BrowserPlatform.LINUX:\n          return path.join('firefox', 'firefox');\n        case BrowserPlatform.WIN32:\n        case BrowserPlatform.WIN64:\n          return path.join('core', 'firefox.exe');\n      }\n  }\n}\nexport var FirefoxChannel;\n(function (FirefoxChannel) {\n  FirefoxChannel[\"STABLE\"] = \"stable\";\n  FirefoxChannel[\"ESR\"] = \"esr\";\n  FirefoxChannel[\"DEVEDITION\"] = \"devedition\";\n  FirefoxChannel[\"BETA\"] = \"beta\";\n  FirefoxChannel[\"NIGHTLY\"] = \"nightly\";\n})(FirefoxChannel || (FirefoxChannel = {}));\nexport async function resolveBuildId(channel = FirefoxChannel.NIGHTLY) {\n  const channelToVersionKey = {\n    [FirefoxChannel.ESR]: 'FIREFOX_ESR',\n    [FirefoxChannel.STABLE]: 'LATEST_FIREFOX_VERSION',\n    [FirefoxChannel.DEVEDITION]: 'FIREFOX_DEVEDITION',\n    [FirefoxChannel.BETA]: 'FIREFOX_DEVEDITION',\n    [FirefoxChannel.NIGHTLY]: 'FIREFOX_NIGHTLY'\n  };\n  const versions = await getJSON(new URL('https://product-details.mozilla.org/1.0/firefox_versions.json'));\n  const version = versions[channelToVersionKey[channel]];\n  if (!version) {\n    throw new Error(`Channel ${channel} is not found.`);\n  }\n  return channel + '_' + version;\n}\nexport async function createProfile(options) {\n  if (!fs.existsSync(options.path)) {\n    await fs.promises.mkdir(options.path, {\n      recursive: true\n    });\n  }\n  await syncPreferences({\n    preferences: {\n      ...defaultProfilePreferences(options.preferences),\n      ...options.preferences\n    },\n    path: options.path\n  });\n}\nfunction defaultProfilePreferences(extraPrefs) {\n  const server = 'dummy.test';\n  const defaultPrefs = {\n    // Make sure Shield doesn't hit the network.\n    'app.normandy.api_url': '',\n    // Disable Firefox old build background check\n    'app.update.checkInstallTime': false,\n    // Disable automatically upgrading Firefox\n    'app.update.disabledForTesting': true,\n    // Increase the APZ content response timeout to 1 minute\n    'apz.content_response_timeout': 60000,\n    // Prevent various error message on the console\n    // jest-puppeteer asserts that no error message is emitted by the console\n    'browser.contentblocking.features.standard': '-tp,tpPrivate,cookieBehavior0,-cryptoTP,-fp',\n    // Enable the dump function: which sends messages to the system\n    // console\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1543115\n    'browser.dom.window.dump.enabled': true,\n    // Disable topstories\n    'browser.newtabpage.activity-stream.feeds.system.topstories': false,\n    // Always display a blank page\n    'browser.newtabpage.enabled': false,\n    // Background thumbnails in particular cause grief: and disabling\n    // thumbnails in general cannot hurt\n    'browser.pagethumbnails.capturing_disabled': true,\n    // Disable safebrowsing components.\n    'browser.safebrowsing.blockedURIs.enabled': false,\n    'browser.safebrowsing.downloads.enabled': false,\n    'browser.safebrowsing.malware.enabled': false,\n    'browser.safebrowsing.phishing.enabled': false,\n    // Disable updates to search engines.\n    'browser.search.update': false,\n    // Do not restore the last open set of tabs if the browser has crashed\n    'browser.sessionstore.resume_from_crash': false,\n    // Skip check for default browser on startup\n    'browser.shell.checkDefaultBrowser': false,\n    // Disable newtabpage\n    'browser.startup.homepage': 'about:blank',\n    // Do not redirect user when a milstone upgrade of Firefox is detected\n    'browser.startup.homepage_override.mstone': 'ignore',\n    // Start with a blank page about:blank\n    'browser.startup.page': 0,\n    // Do not allow background tabs to be zombified on Android: otherwise for\n    // tests that open additional tabs: the test harness tab itself might get\n    // unloaded\n    'browser.tabs.disableBackgroundZombification': false,\n    // Do not warn when closing all other open tabs\n    'browser.tabs.warnOnCloseOtherTabs': false,\n    // Do not warn when multiple tabs will be opened\n    'browser.tabs.warnOnOpen': false,\n    // Do not automatically offer translations, as tests do not expect this.\n    'browser.translations.automaticallyPopup': false,\n    // Disable the UI tour.\n    'browser.uitour.enabled': false,\n    // Turn off search suggestions in the location bar so as not to trigger\n    // network connections.\n    'browser.urlbar.suggest.searches': false,\n    // Disable first run splash page on Windows 10\n    'browser.usedOnWindows10.introURL': '',\n    // Do not warn on quitting Firefox\n    'browser.warnOnQuit': false,\n    // Defensively disable data reporting systems\n    'datareporting.healthreport.documentServerURI': `http://${server}/dummy/healthreport/`,\n    'datareporting.healthreport.logging.consoleEnabled': false,\n    'datareporting.healthreport.service.enabled': false,\n    'datareporting.healthreport.service.firstRun': false,\n    'datareporting.healthreport.uploadEnabled': false,\n    // Do not show datareporting policy notifications which can interfere with tests\n    'datareporting.policy.dataSubmissionEnabled': false,\n    'datareporting.policy.dataSubmissionPolicyBypassNotification': true,\n    // DevTools JSONViewer sometimes fails to load dependencies with its require.js.\n    // This doesn't affect Puppeteer but spams console (Bug 1424372)\n    'devtools.jsonview.enabled': false,\n    // Disable popup-blocker\n    'dom.disable_open_during_load': false,\n    // Enable the support for File object creation in the content process\n    // Required for |Page.setFileInputFiles| protocol method.\n    'dom.file.createInChild': true,\n    // Disable the ProcessHangMonitor\n    'dom.ipc.reportProcessHangs': false,\n    // Disable slow script dialogues\n    'dom.max_chrome_script_run_time': 0,\n    'dom.max_script_run_time': 0,\n    // Only load extensions from the application and user profile\n    // AddonManager.SCOPE_PROFILE + AddonManager.SCOPE_APPLICATION\n    'extensions.autoDisableScopes': 0,\n    'extensions.enabledScopes': 5,\n    // Disable metadata caching for installed add-ons by default\n    'extensions.getAddons.cache.enabled': false,\n    // Disable installing any distribution extensions or add-ons.\n    'extensions.installDistroAddons': false,\n    // Turn off extension updates so they do not bother tests\n    'extensions.update.enabled': false,\n    // Turn off extension updates so they do not bother tests\n    'extensions.update.notifyUser': false,\n    // Make sure opening about:addons will not hit the network\n    'extensions.webservice.discoverURL': `http://${server}/dummy/discoveryURL`,\n    // Allow the application to have focus even it runs in the background\n    'focusmanager.testmode': true,\n    // Disable useragent updates\n    'general.useragent.updates.enabled': false,\n    // Always use network provider for geolocation tests so we bypass the\n    // macOS dialog raised by the corelocation provider\n    'geo.provider.testing': true,\n    // Do not scan Wifi\n    'geo.wifi.scan': false,\n    // No hang monitor\n    'hangmonitor.timeout': 0,\n    // Show chrome errors and warnings in the error console\n    'javascript.options.showInConsole': true,\n    // Disable download and usage of OpenH264: and Widevine plugins\n    'media.gmp-manager.updateEnabled': false,\n    // Disable the GFX sanity window\n    'media.sanity-test.disabled': true,\n    // Disable experimental feature that is only available in Nightly\n    'network.cookie.sameSite.laxByDefault': false,\n    // Do not prompt for temporary redirects\n    'network.http.prompt-temp-redirect': false,\n    // Disable speculative connections so they are not reported as leaking\n    // when they are hanging around\n    'network.http.speculative-parallel-limit': 0,\n    // Do not automatically switch between offline and online\n    'network.manage-offline-status': false,\n    // Make sure SNTP requests do not hit the network\n    'network.sntp.pools': server,\n    // Disable Flash.\n    'plugin.state.flash': 0,\n    'privacy.trackingprotection.enabled': false,\n    // Can be removed once Firefox 89 is no longer supported\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1710839\n    'remote.enabled': true,\n    // Disabled screenshots component\n    'screenshots.browser.component.enabled': false,\n    // Don't do network connections for mitm priming\n    'security.certerrors.mitm.priming.enabled': false,\n    // Local documents have access to all other local documents,\n    // including directory listings\n    'security.fileuri.strict_origin_policy': false,\n    // Do not wait for the notification button security delay\n    'security.notification_enable_delay': 0,\n    // Ensure blocklist updates do not hit the network\n    'services.settings.server': `http://${server}/dummy/blocklist/`,\n    // Do not automatically fill sign-in forms with known usernames and\n    // passwords\n    'signon.autofillForms': false,\n    // Disable password capture, so that tests that include forms are not\n    // influenced by the presence of the persistent doorhanger notification\n    'signon.rememberSignons': false,\n    // Disable first-run welcome page\n    'startup.homepage_welcome_url': 'about:blank',\n    // Disable first-run welcome page\n    'startup.homepage_welcome_url.additional': '',\n    // Disable browser animations (tabs, fullscreen, sliding alerts)\n    'toolkit.cosmeticAnimations.enabled': false,\n    // Prevent starting into safe mode after application crashes\n    'toolkit.startup.max_resumed_crashes': -1\n  };\n  return Object.assign(defaultPrefs, extraPrefs);\n}\nasync function backupFile(input) {\n  if (!fs.existsSync(input)) {\n    return;\n  }\n  await fs.promises.copyFile(input, input + '.puppeteer');\n}\n/**\n * Populates the user.js file with custom preferences as needed to allow\n * Firefox's support to properly function. These preferences will be\n * automatically copied over to prefs.js during startup of Firefox. To be\n * able to restore the original values of preferences a backup of prefs.js\n * will be created.\n */\nasync function syncPreferences(options) {\n  const prefsPath = path.join(options.path, 'prefs.js');\n  const userPath = path.join(options.path, 'user.js');\n  const lines = Object.entries(options.preferences).map(([key, value]) => {\n    return `user_pref(${JSON.stringify(key)}, ${JSON.stringify(value)});`;\n  });\n  // Use allSettled to prevent corruption.\n  const result = await Promise.allSettled([backupFile(userPath).then(async () => {\n    await fs.promises.writeFile(userPath, lines.join('\\n'));\n  }), backupFile(prefsPath)]);\n  for (const command of result) {\n    if (command.status === 'rejected') {\n      throw command.reason;\n    }\n  }\n}\nexport function compareVersions(a, b) {\n  // TODO: this is a not very reliable check.\n  return parseInt(a.replace('.', ''), 16) - parseInt(b.replace('.', ''), 16);\n}","map":{"version":3,"names":["fs","path","getJSON","BrowserPlatform","getFormat","buildId","majorVersion","Number","split","shift","archiveNightly","platform","LINUX","LINUX_ARM","MAC_ARM","MAC","WIN32","WIN64","archive","platformName","parseBuildId","value","Object","values","FirefoxChannel","startsWith","substring","length","NIGHTLY","resolveDownloadUrl","baseUrl","channel","DEVEDITION","BETA","STABLE","ESR","resolveDownloadPath","join","resolvedBuildId","relativeExecutablePath","resolveBuildId","channelToVersionKey","versions","URL","version","Error","createProfile","options","existsSync","promises","mkdir","recursive","syncPreferences","preferences","defaultProfilePreferences","extraPrefs","server","defaultPrefs","assign","backupFile","input","copyFile","prefsPath","userPath","lines","entries","map","key","JSON","stringify","result","Promise","allSettled","then","writeFile","command","status","reason","compareVersions","a","b","parseInt","replace"],"sources":["/Users/goyac1/Desktop/Projects/puppeteer/node_modules/@puppeteer/browsers/src/browser-data/firefox.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport fs from 'node:fs';\nimport path from 'node:path';\n\nimport {getJSON} from '../httpUtil.js';\n\nimport {BrowserPlatform, type ProfileOptions} from './types.js';\n\nfunction getFormat(buildId: string): string {\n  const majorVersion = Number(buildId.split('.').shift()!);\n  return majorVersion >= 135 ? 'xz' : 'bz2';\n}\n\nfunction archiveNightly(platform: BrowserPlatform, buildId: string): string {\n  switch (platform) {\n    case BrowserPlatform.LINUX:\n      return `firefox-${buildId}.en-US.linux-x86_64.tar.${getFormat(buildId)}`;\n    case BrowserPlatform.LINUX_ARM:\n      return `firefox-${buildId}.en-US.linux-aarch64.tar.${getFormat(buildId)}`;\n    case BrowserPlatform.MAC_ARM:\n    case BrowserPlatform.MAC:\n      return `firefox-${buildId}.en-US.mac.dmg`;\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      return `firefox-${buildId}.en-US.${platform}.zip`;\n  }\n}\n\nfunction archive(platform: BrowserPlatform, buildId: string): string {\n  switch (platform) {\n    case BrowserPlatform.LINUX_ARM:\n    case BrowserPlatform.LINUX:\n      return `firefox-${buildId}.tar.${getFormat(buildId)}`;\n    case BrowserPlatform.MAC_ARM:\n    case BrowserPlatform.MAC:\n      return `Firefox ${buildId}.dmg`;\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      return `Firefox Setup ${buildId}.exe`;\n  }\n}\n\nfunction platformName(platform: BrowserPlatform): string {\n  switch (platform) {\n    case BrowserPlatform.LINUX:\n      return `linux-x86_64`;\n    case BrowserPlatform.LINUX_ARM:\n      return `linux-aarch64`;\n    case BrowserPlatform.MAC_ARM:\n    case BrowserPlatform.MAC:\n      return `mac`;\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      return platform;\n  }\n}\n\nfunction parseBuildId(buildId: string): [FirefoxChannel, string] {\n  for (const value of Object.values(FirefoxChannel)) {\n    if (buildId.startsWith(value + '_')) {\n      buildId = buildId.substring(value.length + 1);\n      return [value, buildId];\n    }\n  }\n  // Older versions do not have channel as the prefix.Â«\n  return [FirefoxChannel.NIGHTLY, buildId];\n}\n\nexport function resolveDownloadUrl(\n  platform: BrowserPlatform,\n  buildId: string,\n  baseUrl?: string,\n): string {\n  const [channel] = parseBuildId(buildId);\n  switch (channel) {\n    case FirefoxChannel.NIGHTLY:\n      baseUrl ??=\n        'https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central';\n      break;\n    case FirefoxChannel.DEVEDITION:\n      baseUrl ??= 'https://archive.mozilla.org/pub/devedition/releases';\n      break;\n    case FirefoxChannel.BETA:\n    case FirefoxChannel.STABLE:\n    case FirefoxChannel.ESR:\n      baseUrl ??= 'https://archive.mozilla.org/pub/firefox/releases';\n      break;\n  }\n  return `${baseUrl}/${resolveDownloadPath(platform, buildId).join('/')}`;\n}\n\nexport function resolveDownloadPath(\n  platform: BrowserPlatform,\n  buildId: string,\n): string[] {\n  const [channel, resolvedBuildId] = parseBuildId(buildId);\n  switch (channel) {\n    case FirefoxChannel.NIGHTLY:\n      return [archiveNightly(platform, resolvedBuildId)];\n    case FirefoxChannel.DEVEDITION:\n    case FirefoxChannel.BETA:\n    case FirefoxChannel.STABLE:\n    case FirefoxChannel.ESR:\n      return [\n        resolvedBuildId,\n        platformName(platform),\n        'en-US',\n        archive(platform, resolvedBuildId),\n      ];\n  }\n}\n\nexport function relativeExecutablePath(\n  platform: BrowserPlatform,\n  buildId: string,\n): string {\n  const [channel] = parseBuildId(buildId);\n  switch (channel) {\n    case FirefoxChannel.NIGHTLY:\n      switch (platform) {\n        case BrowserPlatform.MAC_ARM:\n        case BrowserPlatform.MAC:\n          return path.join(\n            'Firefox Nightly.app',\n            'Contents',\n            'MacOS',\n            'firefox',\n          );\n        case BrowserPlatform.LINUX_ARM:\n        case BrowserPlatform.LINUX:\n          return path.join('firefox', 'firefox');\n        case BrowserPlatform.WIN32:\n        case BrowserPlatform.WIN64:\n          return path.join('firefox', 'firefox.exe');\n      }\n    case FirefoxChannel.BETA:\n    case FirefoxChannel.DEVEDITION:\n    case FirefoxChannel.ESR:\n    case FirefoxChannel.STABLE:\n      switch (platform) {\n        case BrowserPlatform.MAC_ARM:\n        case BrowserPlatform.MAC:\n          return path.join('Firefox.app', 'Contents', 'MacOS', 'firefox');\n        case BrowserPlatform.LINUX_ARM:\n        case BrowserPlatform.LINUX:\n          return path.join('firefox', 'firefox');\n        case BrowserPlatform.WIN32:\n        case BrowserPlatform.WIN64:\n          return path.join('core', 'firefox.exe');\n      }\n  }\n}\n\nexport enum FirefoxChannel {\n  STABLE = 'stable',\n  ESR = 'esr',\n  DEVEDITION = 'devedition',\n  BETA = 'beta',\n  NIGHTLY = 'nightly',\n}\n\nexport async function resolveBuildId(\n  channel: FirefoxChannel = FirefoxChannel.NIGHTLY,\n): Promise<string> {\n  const channelToVersionKey = {\n    [FirefoxChannel.ESR]: 'FIREFOX_ESR',\n    [FirefoxChannel.STABLE]: 'LATEST_FIREFOX_VERSION',\n    [FirefoxChannel.DEVEDITION]: 'FIREFOX_DEVEDITION',\n    [FirefoxChannel.BETA]: 'FIREFOX_DEVEDITION',\n    [FirefoxChannel.NIGHTLY]: 'FIREFOX_NIGHTLY',\n  };\n  const versions = (await getJSON(\n    new URL('https://product-details.mozilla.org/1.0/firefox_versions.json'),\n  )) as Record<string, string>;\n  const version = versions[channelToVersionKey[channel]];\n  if (!version) {\n    throw new Error(`Channel ${channel} is not found.`);\n  }\n  return channel + '_' + version;\n}\n\nexport async function createProfile(options: ProfileOptions): Promise<void> {\n  if (!fs.existsSync(options.path)) {\n    await fs.promises.mkdir(options.path, {\n      recursive: true,\n    });\n  }\n  await syncPreferences({\n    preferences: {\n      ...defaultProfilePreferences(options.preferences),\n      ...options.preferences,\n    },\n    path: options.path,\n  });\n}\n\nfunction defaultProfilePreferences(\n  extraPrefs: Record<string, unknown>,\n): Record<string, unknown> {\n  const server = 'dummy.test';\n\n  const defaultPrefs = {\n    // Make sure Shield doesn't hit the network.\n    'app.normandy.api_url': '',\n    // Disable Firefox old build background check\n    'app.update.checkInstallTime': false,\n    // Disable automatically upgrading Firefox\n    'app.update.disabledForTesting': true,\n\n    // Increase the APZ content response timeout to 1 minute\n    'apz.content_response_timeout': 60000,\n\n    // Prevent various error message on the console\n    // jest-puppeteer asserts that no error message is emitted by the console\n    'browser.contentblocking.features.standard':\n      '-tp,tpPrivate,cookieBehavior0,-cryptoTP,-fp',\n\n    // Enable the dump function: which sends messages to the system\n    // console\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1543115\n    'browser.dom.window.dump.enabled': true,\n    // Disable topstories\n    'browser.newtabpage.activity-stream.feeds.system.topstories': false,\n    // Always display a blank page\n    'browser.newtabpage.enabled': false,\n    // Background thumbnails in particular cause grief: and disabling\n    // thumbnails in general cannot hurt\n    'browser.pagethumbnails.capturing_disabled': true,\n\n    // Disable safebrowsing components.\n    'browser.safebrowsing.blockedURIs.enabled': false,\n    'browser.safebrowsing.downloads.enabled': false,\n    'browser.safebrowsing.malware.enabled': false,\n    'browser.safebrowsing.phishing.enabled': false,\n\n    // Disable updates to search engines.\n    'browser.search.update': false,\n    // Do not restore the last open set of tabs if the browser has crashed\n    'browser.sessionstore.resume_from_crash': false,\n    // Skip check for default browser on startup\n    'browser.shell.checkDefaultBrowser': false,\n\n    // Disable newtabpage\n    'browser.startup.homepage': 'about:blank',\n    // Do not redirect user when a milstone upgrade of Firefox is detected\n    'browser.startup.homepage_override.mstone': 'ignore',\n    // Start with a blank page about:blank\n    'browser.startup.page': 0,\n\n    // Do not allow background tabs to be zombified on Android: otherwise for\n    // tests that open additional tabs: the test harness tab itself might get\n    // unloaded\n    'browser.tabs.disableBackgroundZombification': false,\n    // Do not warn when closing all other open tabs\n    'browser.tabs.warnOnCloseOtherTabs': false,\n    // Do not warn when multiple tabs will be opened\n    'browser.tabs.warnOnOpen': false,\n\n    // Do not automatically offer translations, as tests do not expect this.\n    'browser.translations.automaticallyPopup': false,\n\n    // Disable the UI tour.\n    'browser.uitour.enabled': false,\n    // Turn off search suggestions in the location bar so as not to trigger\n    // network connections.\n    'browser.urlbar.suggest.searches': false,\n    // Disable first run splash page on Windows 10\n    'browser.usedOnWindows10.introURL': '',\n    // Do not warn on quitting Firefox\n    'browser.warnOnQuit': false,\n\n    // Defensively disable data reporting systems\n    'datareporting.healthreport.documentServerURI': `http://${server}/dummy/healthreport/`,\n    'datareporting.healthreport.logging.consoleEnabled': false,\n    'datareporting.healthreport.service.enabled': false,\n    'datareporting.healthreport.service.firstRun': false,\n    'datareporting.healthreport.uploadEnabled': false,\n\n    // Do not show datareporting policy notifications which can interfere with tests\n    'datareporting.policy.dataSubmissionEnabled': false,\n    'datareporting.policy.dataSubmissionPolicyBypassNotification': true,\n\n    // DevTools JSONViewer sometimes fails to load dependencies with its require.js.\n    // This doesn't affect Puppeteer but spams console (Bug 1424372)\n    'devtools.jsonview.enabled': false,\n\n    // Disable popup-blocker\n    'dom.disable_open_during_load': false,\n\n    // Enable the support for File object creation in the content process\n    // Required for |Page.setFileInputFiles| protocol method.\n    'dom.file.createInChild': true,\n\n    // Disable the ProcessHangMonitor\n    'dom.ipc.reportProcessHangs': false,\n\n    // Disable slow script dialogues\n    'dom.max_chrome_script_run_time': 0,\n    'dom.max_script_run_time': 0,\n\n    // Only load extensions from the application and user profile\n    // AddonManager.SCOPE_PROFILE + AddonManager.SCOPE_APPLICATION\n    'extensions.autoDisableScopes': 0,\n    'extensions.enabledScopes': 5,\n\n    // Disable metadata caching for installed add-ons by default\n    'extensions.getAddons.cache.enabled': false,\n\n    // Disable installing any distribution extensions or add-ons.\n    'extensions.installDistroAddons': false,\n\n    // Turn off extension updates so they do not bother tests\n    'extensions.update.enabled': false,\n\n    // Turn off extension updates so they do not bother tests\n    'extensions.update.notifyUser': false,\n\n    // Make sure opening about:addons will not hit the network\n    'extensions.webservice.discoverURL': `http://${server}/dummy/discoveryURL`,\n\n    // Allow the application to have focus even it runs in the background\n    'focusmanager.testmode': true,\n\n    // Disable useragent updates\n    'general.useragent.updates.enabled': false,\n\n    // Always use network provider for geolocation tests so we bypass the\n    // macOS dialog raised by the corelocation provider\n    'geo.provider.testing': true,\n\n    // Do not scan Wifi\n    'geo.wifi.scan': false,\n\n    // No hang monitor\n    'hangmonitor.timeout': 0,\n\n    // Show chrome errors and warnings in the error console\n    'javascript.options.showInConsole': true,\n\n    // Disable download and usage of OpenH264: and Widevine plugins\n    'media.gmp-manager.updateEnabled': false,\n\n    // Disable the GFX sanity window\n    'media.sanity-test.disabled': true,\n\n    // Disable experimental feature that is only available in Nightly\n    'network.cookie.sameSite.laxByDefault': false,\n\n    // Do not prompt for temporary redirects\n    'network.http.prompt-temp-redirect': false,\n\n    // Disable speculative connections so they are not reported as leaking\n    // when they are hanging around\n    'network.http.speculative-parallel-limit': 0,\n\n    // Do not automatically switch between offline and online\n    'network.manage-offline-status': false,\n\n    // Make sure SNTP requests do not hit the network\n    'network.sntp.pools': server,\n\n    // Disable Flash.\n    'plugin.state.flash': 0,\n\n    'privacy.trackingprotection.enabled': false,\n\n    // Can be removed once Firefox 89 is no longer supported\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1710839\n    'remote.enabled': true,\n\n    // Disabled screenshots component\n    'screenshots.browser.component.enabled': false,\n\n    // Don't do network connections for mitm priming\n    'security.certerrors.mitm.priming.enabled': false,\n\n    // Local documents have access to all other local documents,\n    // including directory listings\n    'security.fileuri.strict_origin_policy': false,\n\n    // Do not wait for the notification button security delay\n    'security.notification_enable_delay': 0,\n\n    // Ensure blocklist updates do not hit the network\n    'services.settings.server': `http://${server}/dummy/blocklist/`,\n\n    // Do not automatically fill sign-in forms with known usernames and\n    // passwords\n    'signon.autofillForms': false,\n\n    // Disable password capture, so that tests that include forms are not\n    // influenced by the presence of the persistent doorhanger notification\n    'signon.rememberSignons': false,\n\n    // Disable first-run welcome page\n    'startup.homepage_welcome_url': 'about:blank',\n\n    // Disable first-run welcome page\n    'startup.homepage_welcome_url.additional': '',\n\n    // Disable browser animations (tabs, fullscreen, sliding alerts)\n    'toolkit.cosmeticAnimations.enabled': false,\n\n    // Prevent starting into safe mode after application crashes\n    'toolkit.startup.max_resumed_crashes': -1,\n  };\n\n  return Object.assign(defaultPrefs, extraPrefs);\n}\n\nasync function backupFile(input: string): Promise<void> {\n  if (!fs.existsSync(input)) {\n    return;\n  }\n  await fs.promises.copyFile(input, input + '.puppeteer');\n}\n\n/**\n * Populates the user.js file with custom preferences as needed to allow\n * Firefox's support to properly function. These preferences will be\n * automatically copied over to prefs.js during startup of Firefox. To be\n * able to restore the original values of preferences a backup of prefs.js\n * will be created.\n */\nasync function syncPreferences(options: ProfileOptions): Promise<void> {\n  const prefsPath = path.join(options.path, 'prefs.js');\n  const userPath = path.join(options.path, 'user.js');\n\n  const lines = Object.entries(options.preferences).map(([key, value]) => {\n    return `user_pref(${JSON.stringify(key)}, ${JSON.stringify(value)});`;\n  });\n\n  // Use allSettled to prevent corruption.\n  const result = await Promise.allSettled([\n    backupFile(userPath).then(async () => {\n      await fs.promises.writeFile(userPath, lines.join('\\n'));\n    }),\n    backupFile(prefsPath),\n  ]);\n  for (const command of result) {\n    if (command.status === 'rejected') {\n      throw command.reason;\n    }\n  }\n}\n\nexport function compareVersions(a: string, b: string): number {\n  // TODO: this is a not very reliable check.\n  return parseInt(a.replace('.', ''), 16) - parseInt(b.replace('.', ''), 16);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}